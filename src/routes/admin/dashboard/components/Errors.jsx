import React, { useEffect, useState } from "react";
import ChartCard from "../../components/ChartCard";

const apiData = {
  Lambda_Total_Errors_count: {
    totalCount: 300,
    hourly: {
      "2024-01-15-00": 5,
      "2024-01-15-01": 8,
      "2024-01-15-02": 4,
      "2024-01-15-03": 6,
      "2024-01-15-04": 3,
      "2024-01-15-05": 7,
      "2024-01-15-06": 12,
      "2024-01-15-07": 15,
      "2024-01-15-08": 18,
      "2024-01-15-09": 10,
      "2024-01-15-10": 20,
      "2024-01-15-11": 22,
      "2024-01-15-12": 25,
      "2024-01-15-13": 20,
      "2024-01-15-14": 30,
      "2024-01-15-15": 12,
      "2024-01-15-16": 14,
      "2024-01-15-17": 16,
      "2024-01-15-18": 18,
      "2024-01-15-19": 10,
      "2024-01-15-20": 8,
      "2024-01-15-21": 6,
      "2024-01-15-22": 5,
      "2024-01-15-23": 3,
      "2024-01-16-00": 6,
      "2024-01-16-01": 4,
      "2024-01-16-02": 5,
      "2024-01-16-03": 3,
      "2024-01-16-04": 2,
      "2024-01-16-05": 4,
      "2024-01-16-06": 8,
      "2024-01-16-07": 10,
      "2024-01-16-08": 12,
      "2024-01-16-09": 15,
      "2024-01-16-10": 18,
      "2024-01-16-11": 20,
      "2024-01-16-12": 22,
      "2024-01-16-13": 24,
      "2024-01-16-14": 28,
      "2024-01-16-15": 25,
      "2024-01-16-16": 18,
      "2024-01-16-17": 14,
      "2024-01-16-18": 12,
      "2024-01-16-19": 10,
      "2024-01-16-20": 8,
      "2024-01-16-21": 6,
      "2024-01-16-22": 5,
      "2024-01-16-23": 4,
    },
  },
  Lambda_Cloud_Streams_Errors_count: {
    totalCount: 80,
    hourly: {
      "2024-01-15-00": 3,
      "2024-01-15-01": 1,
      "2024-01-15-02": 2,
      "2024-01-15-03": 2,
      "2024-01-15-04": 1,
      "2024-01-15-05": 2,
      "2024-01-15-06": 1,
      "2024-01-15-07": 2,
      "2024-01-15-08": 1,
      "2024-01-15-09": 3,
      "2024-01-15-10": 2,
      "2024-01-15-11": 1,
      "2024-01-15-12": 2,
      "2024-01-15-13": 3,
      "2024-01-15-14": 2,
      "2024-01-15-15": 1,
      "2024-01-15-16": 3,
      "2024-01-15-17": 2,
      "2024-01-15-18": 1,
      "2024-01-15-19": 2,
      "2024-01-15-20": 1,
      "2024-01-15-21": 3,
      "2024-01-15-22": 1,
      "2024-01-15-23": 5,
      "2024-01-16-00": 15,
      "2024-01-16-01": 2,
      "2024-01-16-02": 1,
      "2024-01-16-03": 1,
      "2024-01-16-04": 0,
      "2024-01-16-05": 1,
      "2024-01-16-06": 2,
      "2024-01-16-07": 1,
      "2024-01-16-08": 2,
      "2024-01-16-09": 9,
      "2024-01-16-10": 3,
      "2024-01-16-11": 2,
      "2024-01-16-12": 4,
      "2024-01-16-13": 3,
      "2024-01-16-14": 5,
      "2024-01-16-15": 4,
      "2024-01-16-16": 3,
      "2024-01-16-17": 2,
      "2024-01-16-18": 1,
      "2024-01-16-19": 1,
      "2024-01-16-20": 3,
      "2024-01-16-21": 7,
      "2024-01-16-22": 2,
      "2024-01-16-23": 2,
    },
  },
  Lambda_Proxy_P_Errors_count: {
    totalCount: 300,
    hourly: {
      "2024-01-15-00": 5,
      "2024-01-15-01": 8,
      "2024-01-15-02": 4,
      "2024-01-15-03": 6,
      "2024-01-15-04": 3,
      "2024-01-15-05": 7,
      "2024-01-15-06": 12,
      "2024-01-15-07": 15,
      "2024-01-15-08": 18,
      "2024-01-15-09": 10,
      "2024-01-15-10": 20,
      "2024-01-15-11": 22,
      "2024-01-15-12": 25,
      "2024-01-15-13": 20,
      "2024-01-15-14": 30,
      "2024-01-15-15": 12,
      "2024-01-15-16": 14,
      "2024-01-15-17": 16,
      "2024-01-15-18": 18,
      "2024-01-15-19": 10,
      "2024-01-15-20": 8,
      "2024-01-15-21": 6,
      "2024-01-15-22": 5,
      "2024-01-15-23": 3,
      "2024-01-16-00": 6,
      "2024-01-16-01": 4,
      "2024-01-16-02": 5,
      "2024-01-16-03": 3,
      "2024-01-16-04": 2,
      "2024-01-16-05": 4,
      "2024-01-16-06": 8,
      "2024-01-16-07": 10,
      "2024-01-16-08": 12,
      "2024-01-16-09": 15,
      "2024-01-16-10": 18,
      "2024-01-16-11": 20,
      "2024-01-16-12": 22,
      "2024-01-16-13": 24,
      "2024-01-16-14": 28,
      "2024-01-16-15": 25,
      "2024-01-16-16": 18,
      "2024-01-16-17": 14,
      "2024-01-16-18": 12,
      "2024-01-16-19": 10,
      "2024-01-16-20": 8,
      "2024-01-16-21": 6,
      "2024-01-16-22": 5,
      "2024-01-16-23": 4,
    },
  },
  Lambda_Cloud_api_Errors_count: {
    totalCount: 80,
    hourly: {
      "2024-01-15-00": 3,
      "2024-01-15-01": 1,
      "2024-01-15-02": 2,
      "2024-01-15-03": 2,
      "2024-01-15-04": 1,
      "2024-01-15-05": 2,
      "2024-01-15-06": 1,
      "2024-01-15-07": 2,
      "2024-01-15-08": 1,
      "2024-01-15-09": 3,
      "2024-01-15-10": 2,
      "2024-01-15-11": 1,
      "2024-01-15-12": 2,
      "2024-01-15-13": 3,
      "2024-01-15-14": 2,
      "2024-01-15-15": 1,
      "2024-01-15-16": 3,
      "2024-01-15-17": 2,
      "2024-01-15-18": 1,
      "2024-01-15-19": 2,
      "2024-01-15-20": 1,
      "2024-01-15-21": 3,
      "2024-01-15-22": 1,
      "2024-01-15-23": 5,
      "2024-01-16-00": 15,
      "2024-01-16-01": 2,
      "2024-01-16-02": 1,
      "2024-01-16-03": 1,
      "2024-01-16-04": 0,
      "2024-01-16-05": 1,
      "2024-01-16-06": 2,
      "2024-01-16-07": 1,
      "2024-01-16-08": 2,
      "2024-01-16-09": 9,
      "2024-01-16-10": 3,
      "2024-01-16-11": 2,
      "2024-01-16-12": 4,
      "2024-01-16-13": 3,
      "2024-01-16-14": 5,
      "2024-01-16-15": 4,
      "2024-01-16-16": 3,
      "2024-01-16-17": 2,
      "2024-01-16-18": 1,
      "2024-01-16-19": 1,
      "2024-01-16-20": 3,
      "2024-01-16-21": 7,
      "2024-01-16-22": 2,
      "2024-01-16-23": 2,
    },
  },
};

const Errors = ({ selected }) => {
  const [data, setData] = useState(apiData);
  const [chartData, setChartData] = useState({});

  useEffect(() => {
    if (!data) return;

    const processed = {};

    Object.entries(data).forEach(([key, value]) => {
      const entries = Object.entries(value.hourly)
        .map(([k, v]) => ({ datetime: k, value: Number(v) }))
        .sort(
          (a, b) =>
            new Date(a.datetime.replace(/-/g, "/")) -
            new Date(b.datetime.replace(/-/g, "/")),
        );

      let chartArray = [];

      if (selected === "24 Hours") {
        const last24 = entries.slice(-24);
        chartArray = last24.map(({ datetime, value }) => ({
          x: datetime.split("-").pop(),
          value,
        }));
      } else if (selected === "30 Days") {
        const dayMap = {};
        entries.forEach(({ datetime, value }) => {
          const day = datetime.split("-").slice(0, 3).join("-");
          dayMap[day] = (dayMap[day] || 0) + value;
        });

        const today = new Date();
        for (let i = 29; i >= 0; i--) {
          const d = new Date(today);
          d.setDate(d.getDate() - i);
          const dayStr = d.toISOString().split("T")[0];
          chartArray.push({ x: dayStr, value: dayMap[dayStr] || 0 });
        }
      }

      processed[key] = chartArray;
    });

    setChartData(processed);
  }, [data, selected]);

  const formatTitle = key =>
    key.replace(/_/g, " ").replace(/\b\w/g, char => char.toUpperCase());

  return (
    <div className="p-4 grid gap-3 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3">
      {Object.entries(chartData).map(([key, value]) => (
        <ChartCard
          key={key}
          title={formatTitle(key)}
          color="#DE4B32"
          hourlyBreakdown={value}
          text={`This is the number of ${formatTitle(key)}.`}
        />
      ))}
    </div>
  );
};

export default Errors;
